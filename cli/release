#!/bin/bash

if [ -z "$1" ]; then
  echo "Use: $0 <patch|minor|major>"
  exit 1
fi

LAST_VERSION=$(git describe --tags --abbrev=0 2>/dev/null)

if [ -z "$LAST_VERSION" ]; then
  LAST_VERSION="1.0.0"
fi

LAST_VERSION=${LAST_VERSION#v}

IFS='.' read -r -a VERSION_PARTS <<< "$LAST_VERSION"

MAJOR_VERSION=${VERSION_PARTS[0]}
MINOR_VERSION=${VERSION_PARTS[1]}
PATCH_VERSION=${VERSION_PARTS[2]}

case $1 in
  patch)
    PATCH_VERSION=$((PATCH_VERSION + 1))
    ;;
  minor)
    MINOR_VERSION=$((MINOR_VERSION + 1))
    PATCH_VERSION=0
    ;;
  major)
    MAJOR_VERSION=$((MAJOR_VERSION + 1))
    MINOR_VERSION=0
    PATCH_VERSION=0
    ;;
  *)
    echo "Invalid argument. Use 'patch', 'minor' or 'major'."
    exit 1
    ;;
esac

NEW_VERSION="$MAJOR_VERSION.$MINOR_VERSION.$PATCH_VERSION"

npm run release -- --release-as $NEW_VERSION
